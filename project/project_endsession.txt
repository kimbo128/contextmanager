A multi-stage tool for documenting project management sessions, recording achievements, tracking task updates, and creating a structured record of project evolution.

When to use this tool:
- Concluding a project planning or review session
- Documenting decisions made during team meetings
- Recording updates to tasks and their status
- Tracking new tasks created during work sessions
- Documenting changes to project risk assessments
- Updating overall project status information
- Creating a structured record of project activities
- Establishing a formal conclusion to a focused work period
- Building a historical record of project development
- Preserving context for future team members or sessions
- Updating entity status values and tracking progress
- Modifying task priorities as project needs evolve
- Establishing or modifying sequential relationships between tasks

Key features:
- Provides a structured, multi-stage workflow for project session documentation
- Records project decisions and achievements in the knowledge graph
- Captures task status updates and progress information
- Tracks creation of new tasks with descriptions and priorities
- Documents risk updates with impact and probability assessments
- Updates project status information
- Maintains session continuity with unique session IDs
- Supports revision of previous stages when needed
- Offers a comprehensive assembly stage that consolidates all session information
- Manages status progression of project entities via has_status relations
- Tracks priority assignments for tasks via has_priority relations
- Documents sequential task relationships via precedes relations

The endsession tool uses a sequential, multi-stage approach with 7 typical stages:
1. Summary Stage: Records basic session information
2. Achievements Stage: Documents decisions and accomplishments
3. Task Updates Stage: Records changes to existing tasks
4. New Tasks Stage: Documents newly created tasks
5. Status Updates Stage: Records changes to entity status values
6. Project Status Stage: Updates the overall project status
7. Assembly Stage: Consolidates all information and finalizes the session record

Parameters explained:
1. sessionId: Required - Unique identifier for the project session
  - Obtained from the startsession tool
  - Example: "proj_1234567890_abc123"
2. stage: Required - Current stage of the endsession workflow
  - Accepts: "summary", "achievements", "taskUpdates", "newTasks", "statusUpdates", "projectStatus", or "assembly"
  - Each stage has specific data requirements and processing logic
3. stageNumber: Required - The sequence number of the current stage
  - Starts at 1 and typically progresses through the stages
  - Used to track progress through the session documentation workflow
4. totalStages: Required - Total number of stages planned for this workflow
  - Typically 7 for the complete workflow
  - Provides context for the progress within the overall process
5. analysis: Optional - Text analysis or observations for the current stage
  - Descriptive text explaining the work done in this stage
  - Example: "Analyzed progress on the marketing campaign project"
6. stageData: Optional - Stage-specific structured data
  - Structure varies by stage type:
    * summary: { summary: "Session summary text", duration: "3 hours", project: "ProjectName" }
    * achievements: { achievements: ["Decision 1", "Accomplishment 2"] }
    * taskUpdates: { updates: [{ name: "Task1", status: "active", progress: "50%" }] }
    * newTasks: { tasks: [{ name: "New Task", description: "Details", priority: "high", precedes: "Task3" }] }
    * statusUpdates: { statusUpdates: [{ entityName: "Task1", newStatus: "complete", note: "Finished implementation" }, { entityName: "Risk1", newStatus: "inactive", note: "Risk mitigated" }] }
    * projectStatus: { projectStatus: "active", projectObservation: "Good progress", priorityUpdates: [{ entityName: "Task2", priority: "high", note: "Critical for launch" }], sequenceUpdates: [{ before: "Task1", after: "Task4", note: "Rearranged sequence to optimize workflow" }] }
    * assembly: No stageData needed - automatically assembled from previous stages
7. nextStageNeeded: Required - Whether additional stages are needed after this one
  - Boolean value (true/false)
  - Set to false on the final stage to complete the session
8. isRevision: Optional - Whether this is revising a previous stage
  - Boolean value (true/false)
  - Default: false
9. revisesStage: Optional - If revising, which stage number is being revised
  - Required when isRevision is true
  - Indicates which previous stage is being updated

Status and Priority Management:
- The statusUpdates stage allows for batch updates to entity status values
- Valid status values include: inactive, active, complete
- Priority assignments (high, low) can be modified in the projectStatus stage
- Status changes are implemented through has_status relations
- Priority changes are implemented through has_priority relations
- Status and priority changes are tracked to maintain project progress history

Sequential Task Management:
- The projectStatus stage allows for defining or modifying sequential relationships
- The precedes relation is used to establish logical ordering between tasks
- New tasks can specify which tasks they precede or follow
- Sequential updates help maintain a coherent project workflow
- Task sequences can be visualized through the loadcontext tool

When the endsession workflow completes (assembly stage with nextStageNeeded: false), the tool performs these actions:
1. Records the session completion in persistent storage
2. Creates a summary of all documented information
3. Updates the project status in the knowledge graph
4. Links all achievements, task updates, and risk information
5. Updates status, priority, and sequential relationships for relevant entities

Return information:
- JSON response with the following structure when stages are in progress:
  * success: Boolean indicating whether the operation succeeded
  * stageCompleted: The stage that was just completed
  * nextStageNeeded: Whether more stages are required
  * stageResult: The processed result of the current stage
- Formatted markdown text summary when the session is completed, including:
  * Session date and project name
  * Decisions documented
  * Task updates
  * Status changes
  * Priority modifications
  * Task sequencing changes
  * Project status
  * New tasks added
  * Risk updates
  * Session summary

You should:
- Complete all stages in order for comprehensive session documentation
- Provide specific details in each stage for accurate project documentation
- Specify task updates with clear status information using valid values (inactive, active, complete)
- Include priority levels (high, low) when adding new tasks or updating priorities
- Document all key decisions made during the session as achievements
- Update entity status using has_status relations with valid status values
- Define task sequences using precedes relations to establish workflow
- If making a revision, specify which stage is being revised
- Only mark nextStageNeeded as false on the final assembly stage
- Review the final summary message to confirm all session details were recorded properly
- Use the unique session ID consistently across all stages 